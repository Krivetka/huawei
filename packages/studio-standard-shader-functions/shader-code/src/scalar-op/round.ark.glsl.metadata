{
    "compatibility_info": {
        "version": "2.0",
        "type": "metafile"
    },
    "metainfo": {
        "iid": "4924cb30-cd62-45f4-9094-1a90f0676dc0",
        "uri": "project://packages/studio-standard-shader-functions/shader-code/src/scalar-op/round.ark.glsl",
        "sha1": "67a084ceb97652ddcd606405ce0e78f33446e5e1",
        "spec": {
            "$meta": {
                "version": "1.0"
            },
            "$root": {
                "$classId": "68089ffa-cefa-11ed-afa1-0242ac120002",
                "$name": "ShaderCodeAsset",
                "$instanceId": "0000d9cb-17c1-4910-a2e0-961b58a5bae3",
                "$properties": {
                    "Thumbnail": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "",
                        "defaultValue": "",
                        "flags": 225
                    },
                    "MediaType": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "application/vnd.ark.shader-code",
                        "defaultValue": "",
                        "flags": 225
                    },
                    "IsDirty": {
                        "$classId": "cd2fd49b-c6b0-14bd-5072-6f7065727479",
                        "value": true,
                        "defaultValue": true,
                        "flags": 227
                    },
                    "GeneratorSourceUri": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "",
                        "defaultValue": "",
                        "flags": 235
                    },
                    "IsGenerated": {
                        "$classId": "cd2fd49b-c6b0-14bd-5072-6f7065727479",
                        "value": false,
                        "defaultValue": false,
                        "flags": 235
                    },
                    "Iid": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "4924cb30-cd62-45f4-9094-1a90f0676dc0",
                        "defaultValue": "",
                        "flags": 235
                    },
                    "Tooltip": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "",
                        "defaultValue": "",
                        "flags": 235
                    },
                    "IsBuiltIn": {
                        "$classId": "cd2fd49b-c6b0-14bd-5072-6f7065727479",
                        "value": false,
                        "defaultValue": false,
                        "flags": 235
                    },
                    "Size": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "",
                        "defaultValue": "",
                        "flags": 235
                    },
                    "Uri": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "project://packages/studio-standard-shader-functions/shader-code/src/scalar-op/round.ark.glsl",
                        "defaultValue": "",
                        "flags": 225
                    },
                    "Category": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "",
                        "defaultValue": "",
                        "flags": 225
                    },
                    "IsValid": {
                        "$classId": "cd2fd49b-c6b0-14bd-5072-6f7065727479",
                        "value": true,
                        "defaultValue": true,
                        "flags": 235
                    },
                    "Name": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "round.ark.glsl",
                        "defaultValue": "",
                        "flags": 225
                    },
                    "ModifiedTimestamp": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "133756347809418549",
                        "defaultValue": "",
                        "flags": 235
                    },
                    "Code": {
                        "$classId": "4c56efce-a00b-20a3-5072-6f7065727479",
                        "value": "#ifndef ROUND_VEC2_BLOCKS_H\r\n#define ROUND_VEC2_BLOCKS_H\r\n\r\n///******************************************************\r\n// * Rounding functions\r\n// ******************************************************/\r\n\r\n/**\r\n * Returns the largest integer less than or equal to the component value. Example: `floor(1.5) = 1.0`,\r\n * `floor(-1.5) = -2`.\r\n *\r\n * @displayName Floor\r\n * @in x - The value to floor.\r\n * @out result - The result of the floor function.\r\n * @templateArg T = float | vec2 | vec3 | vec4\r\n */\r\nvoid FloorBlock(in T x, out T result)\r\n{\r\n    result = floor(x);\r\n}\r\n\r\n/**\r\n * Returns the smallest integer greater than or equal to the component value. Example: `ceil(1.5) = 2.0`,\r\n * `ceil(-1.5) = -1`.\r\n *\r\n * @displayName Ceil\r\n * @in x - The value to ceil.\r\n * @out result - The result of the ceiling.\r\n * @templateArg T = float | vec2 | vec3 | vec4\r\n */\r\nvoid CeilBlock(in T x, out T result)\r\n{\r\n    result = ceil(x);\r\n}\r\n\r\n/**\r\n * Returns the integer part of the component value, so it rounds towards zero. Example: `trunc(1.5) = 1.0`,\r\n * `trunc(-1.5) = -1`.\r\n *\r\n * @displayName Trunc\r\n * @in x - The value to truncate.\r\n * @out result - The truncated value.\r\n * @templateArg T = float | vec2 | vec3 | vec4\r\n */\r\nvoid TruncBlock(in T x, out T result)\r\n{\r\n    result = trunc(x);\r\n}\r\n\r\n/**\r\n * Returns the nearest integer number to the component value. 0.5 is implementation dependent. Example:\r\n * `round(1.5) = 2.0`, `round(-1.5) = -2`.\r\n *\r\n * @displayName Round\r\n * @in x - The value to round.\r\n * @out result - The rounded value.\r\n * @templateArg T = float | vec2 | vec3 | vec4\r\n */\r\nvoid RoundBlock(in T x, out T result)\r\n{\r\n    result = round(x);\r\n}\r\n\r\n/**\r\n * Returns the fractional part of the component value but for negative values it's just continuing the repeating saw\r\n * pattern of interval 1. The value is calculated as `x - floor(x)`. Example: `fract(1.3) = 0.3`, `fract(-1.3) = 0.7`.\r\n *\r\n * @displayName Fractional Part\r\n * @in x - The value to get the fractional part of.\r\n * @out result - The fractional part of the input value.\r\n * @templateArg T = float | vec2 | vec3 | vec4\r\n */\r\nvoid FractBlock(in T x, out T result)\r\n{\r\n    result = fract(x);\r\n}\r\n\r\n/**\r\n * Returns the nearest even integer number to the component value. Equivalent to `round(x / 2) * 2`. Example:\r\n * `roundEven(1.1) = 2.0`\r\n *\r\n * @displayName Round To Even\r\n * @in x - The value to round.\r\n * @out result - The even rounded value.\r\n * @templateArg T = float | vec2 | vec3 | vec4\r\n *\r\n */\r\nvoid RoundEven(in T x, out T result)\r\n{\r\n    result = round(x / 2.0f) * 2.0f;\r\n}\r\n#endif // ROUND_VEC2_BLOCKS_H\r\n",
                        "defaultValue": "",
                        "flags": 227
                    }
                }
            }
        }
    }
}